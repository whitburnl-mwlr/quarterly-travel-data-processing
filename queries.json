[
    {
        "name": "Total Kilometers Travelled",
        "headings": [
            "Total Kilometers Travelled"
        ],
        "query": "SELECT SUM(Distance*Quantity) AS TotalKM FROM {table_name} INNER JOIN CityPairs ON {table_name}.CityPair = CityPairs.Pair WHERE CityPair <> \"\" AND {where_clause};",
        "last_qtr": true,
        "last_year": true
    },
    {
        "name": "Total Expenditure",
        "headings": [
            "Total Expenditure"
        ],
        "query": "SELECT SUM(TotalPayable) AS TotalCost FROM {table_name} WHERE {where_clause};",
        "last_qtr": true,
        "last_year": true
    },
    {
        "name": "Total CO2",
        "headings": [
            "Total CO2 Emissions"
        ],
        "query": "SELECT ROUND(((SELECT SUM(CO2*Quantity) AS TravelCO2 FROM (SELECT Market, Factor, Distance, Quantity, Factor * Distance AS CO2 FROM {table_name} INNER JOIN CityPairs ON {table_name}.CityPair = CityPairs.Pair INNER JOIN CO2Factor ON {table_name}.Market = CO2Factor.Type WHERE CityPair <> \"\" AND {where_clause}) T) + (SELECT SUM(Quantity * Factor) AS HotelCO2 FROM {table_name} INNER JOIN CO2Factor ON CO2Factor.Type = \"Hotel\" WHERE VendorType=\"Hotel\" AND Quantity > 0 AND {where_clause})),0) as TotalCO2;",
        "last_qtr": true,
        "last_year": true
    },
    {
        "name": "Transaction Types",
        "headings": [
            "Transaction Type",
            "Number of Transactions",
            "Total Spend",
            "Average per Transaction",
            "Percentage of Overall Spend"
        ],
        "query": "SELECT VendorType, COUNT(TotalPayable) AS NumberTransactions, SUM(TotalPayable) AS TotalCost, ROUND(AVG(TotalPayable),2) AS AveragePerTransaction, ROUND(100 * SUM(TotalPayable) / CumulativePayable, 2) AS PctOverallSpend FROM {table_name} CROSS JOIN (SELECT SUM(TotalPayable) AS CumulativePayable FROM {table_name} WHERE {where_clause}) T WHERE {where_clause} GROUP BY VendorType ORDER BY PctOverallSpend DESC;"
    },
    {
        "name": "Travellers",
        "headings": [
            "Traveller Name",
            "Number of Transactions",
            "Total Spend",
            "Ticket Spend",
            "Hotel Spend",
            "Average per Transaction",
            "Percentage of Overall Spend"
        ],
        "query": "SELECT TravellerName, COUNT(TotalPayable) AS NumberTransactions, SUM(TotalPayable) AS TotalCost, SUM(CASE WHEN RoomOrIncidental = \"\" THEN TotalPayable ELSE 0 END) AS TotalTicket, SUM(CASE WHEN RoomOrIncidental = \"ROM\" THEN TotalPayable ELSE 0 END) AS TotalHotel, ROUND(AVG(TotalPayable), 2) AS CostPerTransaction, ROUND(100 * SUM(TotalPayable) / CumulativePayable, 2) AS PctOverallSpend FROM {table_name} CROSS JOIN (SELECT SUM(TotalPayable) AS CumulativePayable FROM {table_name} WHERE {where_clause}) T WHERE {where_clause} GROUP BY TravellerName ORDER BY PctOverallSpend DESC;"
    },
    {
        "name": "Booking Codes",
        "headings": [
            "Project Number",
            "Number of Transactions"
        ],
        "query": "SELECT Projectnumber, COUNT(Projectnumber) AS NumberTransactions FROM {table_name} WHERE {where_clause} GROUP BY Projectnumber ORDER BY Projectnumber DESC;"
    },
    {
        "name": "Accommodation Nights",
        "headings": [
            "City",
            "Number of Transactions",
            "Number of Nights",
            "Average per Transaction",
            "Average per Night",
            "Percentage of Overall Spend"
        ],
        "query": "SELECT FolderDestination, COUNT(VendorType) AS NumberTransactions, SUM(Quantity) AS NumberNights, SUM(TotalPayable) AS TotalCost, ROUND(AVG(TotalPayable), 2) AS CostPerTransaction, ROUND(100 * SUM(TotalPayable) / CumulativePayable, 2) AS PctOverallSpend FROM {table_name} CROSS JOIN (SELECT SUM(TotalPayable) AS CumulativePayable FROM {table_name} WHERE VendorType=\"Hotel\" AND Quantity > 0 AND {where_clause}) T WHERE VendorType=\"Hotel\" AND Quantity > 0 AND {where_clause} GROUP BY FolderDestination ORDER BY PctOverallSpend DESC;"
    },
    {
        "name": "Booking Method",
        "headings": [
            "Type of Booking",
            "Number of Bookings",
            "Percentage"
        ],
        "fees": true,
        "query": "SELECT Type, COUNT(*) AS NumberBookings, ROUND(100 * COUNT(*) / CumulativeCount, 2) FROM {table_name} INNER JOIN BookingTypes ON {table_name}.IncidentalType = BookingTypes.Incidental CROSS JOIN (SELECT Count(*) AS CumulativeCount FROM {table_name} INNER JOIN BookingTypes ON {table_name}.IncidentalType = BookingTypes.Incidental WHERE Type IS NOT NULL AND {where_clause}) T WHERE {where_clause} GROUP BY Type ORDER BY NumberBookings DESC;"
    },
    {
        "name": "Time of Booking",
        "headings": [
            "Days in Advance",
            "Number of Bookings",
            "Percentage of Total"
        ],
        "query": "SELECT DaysInAdvance, COUNT(DaysInAdvance) AS Count, ROUND(100 * COUNT(DaysInAdvance) / CumulativeCount, 2) AS Pct FROM {table_name} CROSS JOIN (SELECT COUNT(DaysInAdvance) AS CumulativeCount FROM {table_name} WHERE {where_clause}) T WHERE {where_clause} GROUP BY DaysInAdvance ORDER BY Pct DESC;"
    },
    {
        "name": "People Booking Close to Departure",
        "headings": [
            "Traveller Name",
            "Count"
        ],
        "query": "SELECT TravellerName, COUNT(*) AS Count FROM {table_name} WHERE {where_clause} AND DaysInAdvance = \"1 TO 5\" GROUP BY TravellerName ORDER BY Count DESC;"
    },
    {
        "name": "City Destinations",
        "headings": [
            "Destination",
            "Number of Transactions",
            "Total Spend",
            "Average per Transaction",
            "Percentage of Overall Spend"
        ],
        "query": "SELECT TicketDestination, COUNT(TicketDestination) AS NumberTransactions, SUM(TotalPayable) AS TotalCost, ROUND(AVG(TotalPayable), 2) AS CostPerTransaction, ROUND(100 * SUM(TotalPayable) / CumulativePayable, 2) AS PctOverallSpend FROM {table_name} CROSS JOIN (SELECT SUM(TotalPayable) AS CumulativePayable FROM {table_name} WHERE TicketDestination <> \"\" AND {where_clause}) T WHERE TicketDestination <> \"\" AND {where_clause} GROUP BY FolderDestination ORDER BY PctOverallSpend DESC;"
    },
    {
        "name": "Top 10 City Pairs",
        "headings": [
            "City Pair",
            "Number of Transactions",
            "Total Spend",
            "Average per Transaction",
            "Percentage of Overall Spend"
        ],
        "query": "SELECT CityPair, COUNT(TotalPayable) AS NumberTransactions, SUM(TotalPayable) AS TotalCost, ROUND(AVG(TotalPayable), 2) AS CostPerTransaction, ROUND(100 * SUM(TotalPayable) / CumulativePayable, 2) AS PctOverallSpend FROM {table_name} CROSS JOIN (SELECT SUM(TotalPayable) AS CumulativePayable FROM {table_name} WHERE CityPair <> \"\" AND {where_clause}) T WHERE CityPair <> \"\" AND {where_clause} GROUP BY CityPair ORDER BY COUNT(TotalPayable) DESC LIMIT 10;"
    },
    {
        "name": "Air Domestic Cost to Change",
        "headings": [
            "Fare Type",
            "Supplier",
            "Origin",
            "Destination",
            "Fare",
            "Amendment Fee"
        ],
        "fees": true,
        "query": "SELECT Type, SupplierName, TicketOrigin, TicketDestination, TotalPayable, AmendmentFee FROM (SELECT FareType, VendorType, SupplierName, TicketOrigin, TicketDestination, TotalPayable, LAG(IncidentalType) OVER (ORDER BY UniqueRowID) AS LagIncidental, Lag(TotalPayable) OVER (ORDER BY UniqueRowID) AS AmendmentFee FROM {table_name} WHERE {where_clause}) T INNER JOIN FareTypes ON T.FareType LIKE CONCAT(\"%\", FareTypes.Code, \"%\") WHERE VendorType = \"TKT\" AND LagIncidental LIKE \"Amendment Fee%\";"
    },
    {
        "name": "Air Domestic Fare Selection",
        "headings": [
            "Fare Type",
            "Number of Flights",
            "Percentage of Total Flights",
            "Total Spend",
            "Average per Transaction",
            "Percentage of Overall Spend"
        ],
        "query": "SELECT Type, COUNT(*), ROUND(100 * COUNT(*) / CumulativeFlights, 2), SUM(TotalPayable), ROUND(AVG(TotalPayable), 2), ROUND(100 * SUM(TotalPayable) / CumulativeSpend, 2) FROM {table_name} INNER JOIN FareTypes ON {table_name}.FareType LIKE CONCAT(\"%\", FareTypes.Code, \"%\") CROSS JOIN (Select COUNT(*) AS CumulativeFlights, SUM(TotalPayable) AS CumulativeSpend FROM {table_name} WHERE Market = \"Domestic\" AND {where_clause}) T WHERE Market = \"Domestic\" AND {where_clause} GROUP BY Type;"
    }
]
